name: Alls green

on:
  push:

concurrency:
  group: alls-green-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest

    steps:
      - name: Wait on checks
        uses: actions/github-script@v6
        with:
          script: |
            const checkInterval = 30000; // 30 seconds
            let hasPendingChecks = true;
            const jobName = context.job;

            while (hasPendingChecks) {
              let { data: { check_runs: checkRuns } } = await github.rest.checks.listForRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: context.ref,
                per_page: 100,
              });
              checkRuns = checkRuns.filter(checkRun => checkRun.name !== jobName);

              // get all status
              const statuses = checkRuns.map(checkRun => checkRun.status);
              // check if all is completed
              const allCompleted = statuses.every(status => status === 'completed');
              hasPendingChecks = !allCompleted;

              if (allCompleted) {
                // check if all check runs completions is success or neutral
                const allSuccess = checkRuns.every(checkRun => checkRun.conclusion === 'success' || checkRun.conclusion === 'neutral');
                // if not success workfow is failed
                if (!allSuccess) {
                  core.setFailed('Not all checks are successful');
                  return;
                }
              }

              await new Promise(resolve => setTimeout(resolve, checkInterval));
            }
