name: SonarCloud Report

on:
  workflow_dispatch:
  workflow_run:
    workflows: [ Static Code Analysis, Unit Test ]
    types: [ completed ]

concurrency:
  group: sonar-${{ github.event.workflow_run.head_sha || github.sha }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:

      - name: 'Wait for status checks'
        id: waitforstatuschecks
        uses: pedrox-hs/wait-on-complete@b2d141e59b0b58d557372c153e50c8f43bc64300
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.waitforstatuschecks.outputs.ref }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/libs.versions.toml', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Download static analysis artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: static-analysis.yml
          path: ./artifacts/
          skip_unpack: true

      - name: Download unit tests artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: unit-test.yml
          path: ./artifacts/
          skip_unpack: true

      - name: Unzip all artifacts
        run: |
          unzip -v 'artifacts/*.zip' -d ./

      - name: Run SonarCloud analysis for PR
        if: steps.waitforstatuschecks.outputs.pr
        run: |
          ./gradlew --info buildDebug sonar \
            -Dsonar.pullrequest.key=$SONAR_PR_KEY \
            -Dsonar.pullrequest.branch=$SONAR_BRANCH \
            -Dsonar.pullrequest.base=$SONAR_PR_BASE
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_BRANCH: ${{ steps.waitforstatuschecks.outputs.branch }}
          SONAR_PR_KEY: ${{ steps.waitforstatuschecks.outputs.pr }}
          SONAR_PR_BASE: ${{ steps.waitforstatuschecks.outputs.prBase }}

      - name: Run SonarCloud analysis for branch
        if: ${{ !steps.waitforstatuschecks.outputs.pr }}
        run: |
          ./gradlew --info buildDebug sonar \
            -Dsonar.branch=$SONAR_BRANCH
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_BRANCH: ${{ steps.waitforstatuschecks.outputs.branch }}
