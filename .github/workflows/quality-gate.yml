name: Quality Gate Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '**' ]
    types: [ opened, synchronize, reopened ]

concurrency:
  group: quality-gate-${{ github.sha }}
  cancel-in-progress: true

jobs:
  analysis:
    name: Build and analyze with SonarCloud
    runs-on: ubuntu-latest
    needs: [ unit-test, android-lint, detekt ]
    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/libs.versions.toml', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts/
          pattern: "*-artifact"
          merge-multiple: true

      - name: Copy artifacts to project
        run: |
          rsync -av artifacts/* .

      - name: Run SonarCloud analysis
        run: |
          ./gradlew buildDebug sonar --info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  unit-test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "zulu"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/libs.versions.toml', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Run unit tests and generate coverage report
        run: |
          ./gradlew tasks --all -q | awk '{print $1}' | grep -o '[^:]*$' | sort -u \
            | grep -w 'jacocoTestReport\|createDebugUnitTestCoverageReport\|verifyPaparazziDebug' \
            | xargs ./gradlew --info

      - name: Upload tests artifacts
        uses: actions/upload-artifact@v4
        if: '!cancelled()'
        with:
          name: tests-artifact
          if-no-files-found: error
          retention-days: 5
          path: |
            **/build/test-results/**/*
            **/build/reports/coverage/**/report.xml
            **/build/reports/jacoco/**/*.xml
            **/build/unit_test_code_coverage/**/*.exec
            **/build/code_coverage/**/*.ec

  android-lint:
    name: Android Lint
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/libs.versions.toml', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Run lint
        run: ./gradlew lint --info

      - name: Upload Android lint artifacts
        uses: actions/upload-artifact@v4
        if: '!cancelled()'
        with:
          name: android-lint-artifact
          if-no-files-found: error
          retention-days: 5
          path: |
            **/build/reports/lint-results*.xml

  detekt:
    name: Detekt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/libs.versions.toml') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Run detekt
        run: ./gradlew detekt --info

      - name: Upload detekt artifacts
        uses: actions/upload-artifact@v4
        if: '!cancelled()'
        with:
          name: detekt-artifact
          if-no-files-found: error
          retention-days: 5
          path: |
            **/build/reports/detekt/**/*.xml
